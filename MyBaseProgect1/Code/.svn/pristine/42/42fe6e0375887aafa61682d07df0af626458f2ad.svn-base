//
//  LoginViewController.m
//  KuaiZhu
//
//  Created by Ghy on 2019/5/13.
//  Copyright © 2019年 su. All rights reserved.
//

#import "LoginViewController.h"

#import "LoginVC.h"
#import "RegisterViewController.h"


static id _shareInstance = nil;

//栏目高度
static CGFloat const type_header_height = 45.0;

//栏目
#define column_type_arr @[@"注册",@"登录"]


@interface LoginViewController ()

@property(nonatomic,strong) UIImageView *backImg;

@property(nonatomic,strong) UIButton *backBtn;

@property(nonatomic, copy) NSArray *arrVC;

//头部菜单
@property(nonatomic,strong) MLMSegmentHead *segHead;
//信息列表
@property(nonatomic,strong) MLMSegmentScroll *segScroll;
//当前选中的索引
@property(nonatomic,assign) NSInteger selectIndex;

@end

@implementation LoginViewController

-(instancetype)init{
    if (self = [super init]) {
        [self initView];
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
}

//状态栏颜色
-(UIStatusBarStyle)preferredStatusBarStyle{
    return UIStatusBarStyleLightContent;
}

-(BOOL)prefersStatusBarHidden {
    return NO;
}

-(void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    
    [self.segHead removeFromSuperview];
    [self.segScroll removeFromSuperview];
    self.segScroll = nil;
    self.segHead = nil;
    self.arrVC = nil;
    
    ZWWLog(@"我释放了");
}

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
}


//MARK: - initView
-(void)initView{

    //MARK:背景图
    [self.view addSubview:self.backImg];
    
    //MARK:关闭
    [self.view addSubview:self.backBtn];
    
    //MARK:头部菜单
    __weak typeof(self) weakSelf = self;
    [MLMSegmentManager associateHead:weakSelf.segHead
                          withScroll:weakSelf.segScroll
                          completion:^{
                              [weakSelf.view addSubview:weakSelf.segHead];
                              [weakSelf.view addSubview:weakSelf.segScroll];
        
                              [weakSelf.segHead getScrollLineView].layer.cornerRadius = K_HEAD_BOTTOM_LINE_CORNER;
                              [weakSelf.segHead getScrollLineView].layer.masksToBounds = YES;
                          }];
}


//MARK: -  lazy load
-(UIImageView *)backImg{
    if (!_backImg) {
        _backImg = [BaseUIView createImage:UIScreen.mainScreen.bounds
                                  AndImage:[UIImage imageNamed:@"login_bg"]
                        AndBackgroundColor:nil
                              WithisRadius:NO];
    }
    
    return _backImg;
}

-(MLMSegmentHead *)segHead{
    if (!_segHead) {
        CGFloat y = self.backBtn.frame.size.height + self.backBtn.frame.origin.y + 11;
        CGRect rect = CGRectMake(33, y, 158, type_header_height);
        _segHead = [[MLMSegmentHead alloc] initWithFrame:rect
                                                  titles:column_type_arr
                                               headStyle:SegmentHeadStyleLine layoutStyle:MLMSegmentLayoutDefault];
        
        _segHead.bottomLineHeight = 0;                      //底部线
        _segHead.headColor = [UIColor clearColor];          //背景色
        
        _segHead.selectColor = UIColor.whiteColor;          //选中的颜色
        _segHead.deSelectColor = UIColor.whiteColor;        //默认颜色
        
        _segHead.fontSize = 19;                             //字体大小
        _segHead.fontScale = K_HEAD_MENU_SCALE;             //缩放大小
        
        _segHead.lineColor = K_HEAD_MENU_LINE_COLOR;        //下划线颜色
        _segHead.lineHeight = K_HEAD_BOTTOM_LINE_HEIGHT;    //下划线高度
        _segHead.lineWidth = K_HEAD_BOTTOM_LINE_WIDTH;      //下划线宽度
        _segHead.slideCorner = K_HEAD_BOTTOM_LINE_CORNER;
    }
    
    return _segHead;
}

-(MLMSegmentScroll *)segScroll{
    if (!_segScroll) {
        __block typeof(self) blockSelf = self;
        __weak typeof(self) weakSelf = self;
        
        CGFloat y = _segHead.frame.size.height + _segHead.frame.origin.y + 12;
        CGFloat h = K_APP_HEIGHT - y;
        if ([[UIDevice currentDevice] isiPhoneX]) {
            h -= K_APP_IPHONX_BUTTOM;
        }
        _segScroll = [[MLMSegmentScroll alloc] initWithFrame:CGRectMake(0, y, K_APP_WIDTH, h)
                                                   vcOrViews:weakSelf.arrVC];
        _segScroll.loadAll = NO;
        _segScroll.showIndex = 1;
        _segScroll.scrollEndAction = ^(NSInteger currentIndex, BOOL isLeft, BOOL isRight) {
            blockSelf.selectIndex = currentIndex;
        };
    }
    return _segScroll;
}


-(UIButton *)backBtn{
    if (!_backBtn) {
        CGFloat w = 40;
        CGFloat h = 40;
        CGFloat x = 30;
        CGFloat y = [[UIDevice currentDevice] isiPhoneX] ? K_APP_IPHONX_TOP : 20.0;
        CGRect rect = CGRectMake(x, y, w, h);
        _backBtn = [BaseUIView createBtn:rect
                                AndTitle:nil
                           AndTitleColor:nil
                              AndTxtFont:nil
                                AndImage:[UIImage imageNamed:@"login_exit"]
                      AndbackgroundColor:nil
                          AndBorderColor:nil
                         AndCornerRadius:0
                            WithIsRadius:NO
                     WithBackgroundImage:nil
                         WithBorderWidth:0];
        
        [_backBtn addTarget:self action:@selector(btnCloaseAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _backBtn;
}

-(NSArray *)arrVC{
    if (!_arrVC) {
        _arrVC = @[
                   [[RegisterViewController alloc] init],
                   [[LoginVC alloc] init]
                ];
    }
    return _arrVC;
}


//MARK: - 单例
/** 控制器单例 */
+(instancetype)shareInstance{
    
    if(_shareInstance != nil){
        return _shareInstance;
    }
    
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if(_shareInstance == nil){
            _shareInstance = [[self alloc] init];
        }
    });
    
    return _shareInstance;
}

-(id)copyWithZone:(NSZone *)zone{
    return _shareInstance;
}
+(id)allocWithZone:(struct _NSZone *)zone{
    
    if(_shareInstance != nil){
        return _shareInstance;
    }
    
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if(_shareInstance == nil){
            _shareInstance = [super allocWithZone:zone];
        }
    });
    
    return _shareInstance;
}


//MARK: - 返回(关闭)
-(IBAction)btnCloaseAction:(UIButton * _Nullable)sender{
    [UIView animateWithDuration:0.25 animations:^{
        self.backBtn.transform = CGAffineTransformMakeRotation(M_PI);
    } completion:^(BOOL finished) {
        if (finished) {
            self.backBtn.transform = CGAffineTransformMakeRotation(0);
            [self dismissViewControllerAnimated:YES completion:nil];
        }
    }];
}


//MARK: - 登录
-(void)logininApp:(NSDictionary *)dicParas{
    NSString *strUrl = [NSString stringWithFormat:@"%@Login",K_APP_HOST];
    
    __weak typeof(self) weakSelf = self;
    [Utils putRequestForServerData:strUrl
                    withParameters:dicParas
                    AndSuccessBack:^(id _responseData, NSString *strMsg) {
                        //登录成功
                        if (_responseData) {
                            //获取Cookie
                            ZWWLog(@"登录成功=%@",_responseData)
                            NSArray *cookiesArr = [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookies];
                            NSDictionary *cookieDic = [NSHTTPCookie requestHeaderFieldsWithCookies:cookiesArr];
                            NSString *cookie = [cookieDic objectForKey:LOGIN_COOKIE_KEY];
                            
                            NSMutableDictionary *dicTemp = [NSMutableDictionary dictionary];
                            [dicTemp setValue:cookie forKey:@"LoginCookie"];
                            [dicTemp addEntriesFromDictionary:_responseData];
                            
                            [UserModel setUserData:[dicTemp copy]];
                            [[NSNotificationCenter defaultCenter] postNotificationName:@"loginApp" object:nil];
                            
                            //设置回调
                            if (weakSelf.delegate && [weakSelf.delegate respondsToSelector:@selector(loginFinishBack)]) {
                                [weakSelf.delegate loginFinishBack];
                            }
                            
                            //关闭
                            dispatch_after(DISPATCH_TIME_NOW + 0.25, dispatch_get_main_queue(), ^{
                                [weakSelf btnCloaseAction:nil];
                            });
                        }
                        else{
                            [YJProgressHUD showInfo:(strMsg != nil && ![strMsg isKindOfClass:[NSNull class]])?strMsg:@"登录失败"];
                        }
                    } AndFailureBack:^(NSString *_strError) {
                        ZWWLog(@"登录失败！详见：%@",_strError);
                        [YJProgressHUD showError:_strError];
                    }
                     WithisLoading:YES];
}
-(void)getCode:(NSDictionary *)dicParas{
    [YJProgressHUD showLoading:@"验证码发送中..."];
    NSString *strUrl = [NSString stringWithFormat:@"%@SendSMSCode?Phone=%@",K_APP_HOST,dicParas[@"Phone"]];
//    __weak  typeof(self) weakSelf = self;
//    __block typeof(self) blockSelf = self;
    [Utils getRequestForServerData:strUrl
                    withParameters:nil
                AndHTTPHeaderField:^(AFHTTPRequestSerializer * _Nullable _requestSerializer) {
                    [_requestSerializer setValue:LOGIN_COOKIE forHTTPHeaderField:LOGIN_COOKIE_KEY];
                }
                    AndSuccessBack:^(id  _Nullable _responseData) {
                        [YJProgressHUD showSuccess:@"发送成功"];
                        if (_responseData) {

                        }
                    }
                    AndFailureBack:^(NSString * _Nullable _strError) {
                        ZWWLog(@"加载数据异常！详见：%@",_strError);
                        [YJProgressHUD showError:_strError];

                    }
                     WithisLoading:NO];
}
@end
