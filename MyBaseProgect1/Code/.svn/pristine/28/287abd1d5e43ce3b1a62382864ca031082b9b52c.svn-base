//
//  MyUploadViewController.m
//  KuaiZhu
//
//  Created by apple on 2019/5/21.
//  Copyright © 2019 su. All rights reserved.
//

#import "MyUploadViewController.h"
#import "UploadListTableViewController.h"
#import "UploadModel.h"

static const CGFloat k_top_offset_h = 44;
static id _shareInstance = nil;

//栏目
#define column_type_arr @[@"上传中",@"已审核",@"审核中",@"被拒绝"]

@interface MyUploadViewController (){
    NSInteger uploadCount;
}

//信息列表
@property(nonatomic,strong) MLMSegmentScroll *segScroll;

//头部菜单
@property(nonatomic,strong) MLMSegmentHead *segHead;
@property(nonatomic,strong) UIButton *btnSearch;
//当前选中的索引
@property(nonatomic,assign) NSInteger selectIndex;

@property(nonatomic,weak) id<UploadListTableViewControllerDelegate> delegate;

@end

@implementation MyUploadViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self initView];
}
-(void)BackBtnClick{
    [self.navigationController popViewControllerAnimated:YES];
}

//MARK: - initView
-(void)initView{
    [self setBackgroundColor];
    [self initNavgationBar:[UIColor clearColor]
          AndHasBottomLine:NO
              AndHasShadow:NO
             WithHasOffset:0.0];
    [self initViewControllerTitle:@"我的上传"
                     AndFontColor:K_APP_VIEWCONTROLLER_TITLE_COLOR
                       AndHasBold:YES
                      AndFontSize:K_APP_VIEWCONTROLLER_TITLE_FONT];
    [self.view addSubview:self.btnSearch];
    
    //MARK:头部菜单
    __weak typeof(self) weakSelf = self;
    [MLMSegmentManager associateHead:weakSelf.segHead
                          withScroll:weakSelf.segScroll
                          completion:^{
                              [weakSelf.view addSubview:self.segHead];
                              [weakSelf.view addSubview:self.segScroll];
                              [weakSelf.segHead getScrollLineView].layer.cornerRadius = K_HEAD_BOTTOM_LINE_CORNER;
                              [weakSelf.segHead getScrollLineView].layer.masksToBounds = YES;
                          }];
}

-(MLMSegmentHead *)segHead{
    if (!_segHead) {
        __weak typeof(self) weakSelf = self;
        CGFloat y = weakSelf.navView.frame.size.height;
        CGRect rect = CGRectMake(0, y, K_APP_WIDTH, k_top_offset_h);
        _segHead = [[MLMSegmentHead alloc] initWithFrame:rect
                                                  titles:column_type_arr
                                               headStyle:SegmentHeadStyleLine layoutStyle:MLMSegmentLayoutDefault];
        
        _segHead.bottomLineHeight = 0;                      //底部线
        _segHead.headColor = [UIColor clearColor];          //背景色
        
        _segHead.selectColor = K_HEAD_MENU_SELECT_COLOR;    //选中的颜色
        _segHead.deSelectColor = K_HEAD_MENU_DEFAULT_COLOR; //默认颜色
        
        _segHead.fontSize = K_HEAD_MENU_FONT_SIZE;          //字体大小
        _segHead.fontScale = K_HEAD_MENU_SCALE;             //缩放大小
        
        _segHead.lineColor = K_HEAD_MENU_LINE_COLOR;        //下划线颜色
        _segHead.lineHeight = K_HEAD_BOTTOM_LINE_HEIGHT;    //下划线高度
        _segHead.lineWidth = K_HEAD_BOTTOM_LINE_WIDTH;      //下划线宽度
        _segHead.slideCorner = K_HEAD_BOTTOM_LINE_CORNER;
    }
    return _segHead;
}

-(MLMSegmentScroll *)segScroll{
    if (!_segScroll) {
        __weak typeof(self) weakSelf = self;
        __block typeof(self) blockSelf = self;
        
        CGFloat h = K_APP_HEIGHT - K_APP_NAVIGATION_BAR_HEIGHT - k_top_offset_h;
        if ([[UIDevice currentDevice] isiPhoneX]) {
            h -= K_APP_IPHONX_BUTTOM;
        }
        _segScroll = [[MLMSegmentScroll alloc] initWithFrame:CGRectMake(0, K_APP_NAVIGATION_BAR_HEIGHT + k_top_offset_h, K_APP_WIDTH, h)
                                                   vcOrViews:[weakSelf collectionViewArr:[column_type_arr count]]];
        _segScroll.loadAll = NO;
        _segScroll.scrollEndAction = ^(NSInteger currentIndex, BOOL isLeft, BOOL isRight) {
            blockSelf.selectIndex = currentIndex;
        };
    }
    return _segScroll;
}

//添加视图
-(NSArray *)collectionViewArr:(NSUInteger)count{
    NSMutableArray *_arr = [NSMutableArray array];
    UploadListTableViewController *_cv;
    NSString *strType;
    
    for (NSUInteger i = 0; i < count; i++) {
        
        strType = [NSString stringWithFormat:@"%@",[column_type_arr objectAtIndex:i]];
        _cv = [[UploadListTableViewController alloc] initWithType:strType];
        _cv.strType = strType;
        if (i == 0 && self.uploadModel) {
            _cv.arrListData = @[self.uploadModel];
        
            self.delegate = (id<UploadListTableViewControllerDelegate>)_cv;
        }
        
        [_arr addObject:_cv];
    }
    
    return [_arr copy];
}


//MARK: - 单例
/** 控制器单例 */
+(instancetype)shareInstance{
    
    if(_shareInstance != nil){
        return _shareInstance;
    }
    
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if(_shareInstance == nil){
            _shareInstance = [[self alloc] init];
        }
    });
    
    return _shareInstance;
}

-(id)copyWithZone:(NSZone *)zone{
    return _shareInstance;
}

+(id)allocWithZone:(struct _NSZone *)zone{
    
    if(_shareInstance != nil){
        return _shareInstance;
    }
    
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if(_shareInstance == nil){
            _shareInstance = [super allocWithZone:zone];
        }
    });
    
    return _shareInstance;
}


//MARK: - 上传
-(void)uploadMovieData:(id)response
        andRealFileUrl:(NSString *)realFileUrl
                andStr:(NSString *)str
         andCoverImage:(UIImage *)coverImage{
    
    uploadCount = 0;
    self.imgLocalTemp = coverImage;
    
    UploadListTableViewController *uploadListVC = self.childViewControllers.firstObject;
    if (uploadListVC && (!uploadListVC.arrListData || uploadListVC.arrListData.count <= 0)) {
        uploadListVC.arrListData = @[self.uploadModel];
        [uploadListVC.collectionView reloadData];
        
        self.delegate = (id<UploadListTableViewControllerDelegate>)uploadListVC;
    }
    
    NSString *serverUrl = [NSString stringWithFormat:@"%@",response[@"serverUrl"]];
    NSString *strId = [NSString stringWithFormat:@"%@",response[@"id"]];
    NSData *videoData;
    if (realFileUrl) {
        videoData = [NSData dataWithContentsOfURL:URLFilePath(realFileUrl)];
    }else{
        videoData = [NSData dataWithContentsOfURL:URLWithStr(realFileUrl)];
    }
    NSData *coverData = UIImageJPEGRepresentation(coverImage, 0.75);
    
    dispatch_group_t group = dispatch_group_create();
    dispatch_queue_t queue = dispatch_get_global_queue(0, 0);
    
    dispatch_group_enter(group);
    [self uploadMovieFile:serverUrl
                  andFileName:str
                   andVideoID:strId
                  andfileType:@"video"
                  andPosition:@"0"
                     andisEOF:@"true"
                  andfileData:videoData
                    withGroup:group];
    
    dispatch_group_enter(group);
    [self uploadMovieFile:serverUrl
                  andFileName:str
                   andVideoID:strId
                  andfileType:@"cover"
                  andPosition:@"0"
                     andisEOF:@"true"
                  andfileData:coverData
                    withGroup:group];
    
    //关闭
    __block typeof(self) blockSelf = self;
    dispatch_group_notify(group, queue, ^{
        ZWWLog(@"全部线程结束");
        
        dispatch_async(dispatch_get_main_queue(), ^{
            if (blockSelf->uploadCount == 2)
                [YJProgressHUD showSuccess:@"上传成功"];
            else
                [YJProgressHUD showError:@"上传失败"];
            
            [self.segScroll setContentOffset:CGPointZero animated:NO];
        });
        
        //发送通知
        [[NSNotificationCenter defaultCenter] postNotificationName:K_APP_VIDEO_UPLOAD_REFRESH object:nil];
    });
}

- (void)uploadMovieFile:(NSString *)serverUrl
            andFileName:(NSString *)videoName
             andVideoID:(NSString *)videoID
            andfileType:(NSString *)fileType
            andPosition:(NSString *)position
               andisEOF:(NSString *)isEOF
            andfileData:(NSData *)fileData
              withGroup:(dispatch_group_t)group
{
    
    __block typeof(self) blockSelf = self;
    __weak typeof(self) weakSelf = self;
    
    [Utils postImageUploadToServer:serverUrl
                           AndBody:fileData
                AndHTTPHeaderField:^(NSMutableURLRequest *_request) {
                    
                    if ([fileType isEqualToString:@"cover"]) {
                        [_request setValue:@"multipart/form-data" forHTTPHeaderField:@"Content-Type"];
                    }
                    else{
                        [_request setValue:@"application/octet-stream" forHTTPHeaderField:@"Content-Type"];
                    }
                    [_request setValue:@"application/json" forHTTPHeaderField:@"Accept"];
                    [_request setValue:LOGIN_COOKIE forHTTPHeaderField:LOGIN_COOKIE_KEY];
                    
                    [_request setValue:videoID forHTTPHeaderField:@"__videoID"];
                    [_request setValue:fileType forHTTPHeaderField:@"__fileType"];
                    [_request setValue:position forHTTPHeaderField:@"__position"];
                    [_request setValue:isEOF forHTTPHeaderField:@"__isEOF"];
                }
                    AndSuccessBack:^(NSObject *_responseData, NSString *_strMsg) {
                        ZWWLog(@"%@上传成功:%@",[fileType isEqualToString:@"cover"]?@"视频封面图片":@"视频",_responseData);
                        if (_responseData) {
                            ZWWLog(@"上传成功！详见：%@",(_strMsg && ![_strMsg isKindOfClass:[NSNull class]])?_strMsg:@"上传成功");
                            blockSelf->uploadCount++;
                        }
                        else{
                            ZWWLog(@"上传失败！详见：%@",(_strMsg && ![_strMsg isKindOfClass:[NSNull class]])?_strMsg:@"上传失败");
                            blockSelf->uploadCount--;
                        }
                        
                        dispatch_group_leave(group);
                    } AndFailureBack:^(NSString *_strError) {
                        ZWWLog(@"%@上传失败:%@",[fileType isEqualToString:@"cover"]?@"视频封面图片":@"视频",_strError);
                        blockSelf->uploadCount--;
                        
                        dispatch_group_leave(group);
                    } andProgress:^(NSProgress * _Nonnull progress) {
                        double fv = (double)progress.completedUnitCount/(double)progress.totalUnitCount;
                        ZWWLog(@"progress:%lld / %lld,fv:%f",progress.completedUnitCount,progress.totalUnitCount,fv);
                        
                        //只加载视频进度
                        if (![fileType isEqualToString:@"cover"] && weakSelf.delegate && [weakSelf.delegate respondsToSelector:@selector(uploadListProgress:andMovieId:)]) {
                            [weakSelf.delegate uploadListProgress:fv
                                                        andMovieId:videoID.integerValue];
                        }
                    }
                     WithisLoading:YES];
}
-(UIButton *)btnSearch{
    if (!_btnSearch) {
        CGFloat w = 35;
        CGFloat x = [[UIDevice currentDevice] isSmallDevice]?15:25;
        CGFloat h = 35;
        CGFloat y = ([[UIDevice currentDevice] isiPhoneX]?K_APP_IPHONX_TOP:20) + (44 - h) * 0.5;
        _btnSearch =[BaseUIView createBtn:CGRectMake(x, y, w, h)
                                 AndTitle:nil
                            AndTitleColor:nil
                               AndTxtFont:nil
                                 AndImage:[UIImage imageNamed:@"backBtnBlack"]
                       AndbackgroundColor:nil
                           AndBorderColor:nil
                          AndCornerRadius:0
                             WithIsRadius:NO
                      WithBackgroundImage:nil
                          WithBorderWidth:0];

        [_btnSearch addTarget:self action:@selector(BackBtnClick) forControlEvents:UIControlEventTouchUpInside];
    }
    return _btnSearch;
}
@end
